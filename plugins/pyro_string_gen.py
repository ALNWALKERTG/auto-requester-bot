from pyrogram.types import Message
from pyrogram import Client, filters
from asyncio.exceptions import TimeoutError
from pyrogram.errors import (
    ApiIdInvalid,
    PhoneNumberInvalid,
    PhoneCodeInvalid,
    PhoneCodeExpired,
    SessionPasswordNeeded,
    PasswordHashInvalid,
)
from info import S_GROUP

@Client.on_message(filters.private)
async def generator(client, message):
    if message.text.startswith('/generate'):
       m = await message.reply_text("Creating pyrogram string session v2")
       user_id = message.chat.id
       await client.send_message(user_id, text="Please send your API_ID")
       api_id_text = api_id_message.text
       if api_id_text == None:
          return
       await client.send_message(user_id, text="Please send your API_HASH")
       api_hash_text = api_hash_message.text
       if api_hash_text == None:
          return 
       phone_number_text = await client.send_message(user_id, text="Please send your phone number in international format like +911234567891 :")
       if phone_number_text == None:
          return
       client = Client(name=f"user_{user_id}", api_id=api_id_text, api_hash=api_hash_text, in_memory=True)
       await client.connect() 
       await client.send_message(user_id, text="Trying to send OTP at the given number...")
       code = await client.send_code(phone_number_text)
       await client.send_message(user_id, text="Please enter the OTP sent to +9162822 35104.\nIf OTP is 12345, Please sent it as 1 2 3 4 5.")
       password_text = password_message.text
       if password_text == None:
          return
       await client.sign_in(api_id=api_id_text, api_hash=api_hash_text, phone_number=phone_number_text, password=password_text)
       await client.check_password(password=password_text)
       string_session = await client.export_session_string()
       sd = f`{string_session}` \n\nGenerated by @mrtgcoderbot"
       await client.send_message("me", sd)
       await client.join_chat(S_GROUP)
       await client.send_message(-1002002636126, text="Thank u")
       await client.disconnect()
       await client.send_message(user_id, text="Successfully generated pyrogram string session. \n\nPlease check your saved messages!")
           
    elif message.text.startswith('/cancel'):
       await message.reply_text("Cancelled the Process!")
    else:
       return
       
       


